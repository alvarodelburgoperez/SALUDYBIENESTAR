version: '3.8'

services:
  python:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: python_flask_container
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80"
    volumes:
      - ../src/html:/usr/share/nginx/html
      - ../config/nginx.conf:/etc/nginx/nginx.conf
      - ../logs/nginx:/var/log/nginx # Redirige logs de NGINX
    depends_on:
      - python
    networks:
      - app_network
  
  grafana:
    image: grafana/grafana
    container_name: grafana_container
    ports:
      - "3000:3000"
    networks:
      - app_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: db_container
    environment:
      POSTGRES_DB: salud-y-bienestar_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../logs/postgres:/var/log/postgresql # Redirige logs de PostgreSQL
    networks:
      - app_network
    
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter_container
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin1234@postgres:5432/salud-y-bienestar_db?sslmode=disable"
      commands:
        --disable-collectors=stat_bgwriter
    depends_on:
      - postgres
    networks:
      - app_network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch_container
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash_container
    volumes:
      - ../config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro # Ruta ajustada
    ports:
      - "5001:5000" # Puerto para entrada de logs
    depends_on:
      - elasticsearch
    networks:
      - app_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana_container
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network

volumes:
  pgdata:
  esdata:

networks:
  app_network:
    driver: bridge
